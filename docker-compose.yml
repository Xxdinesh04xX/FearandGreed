version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: goquant_postgres
    environment:
      POSTGRES_DB: goquant
      POSTGRES_USER: goquant_user
      POSTGRES_PASSWORD: goquant_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U goquant_user -d goquant"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: goquant_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GoQuant Application
  goquant:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: goquant_app
    environment:
      - DATABASE_URL=postgresql://goquant_user:goquant_password@postgres:5432/goquant
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
      - ./.env:/app/.env
    ports:
      - "8050:8050"  # Dashboard
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: goquant_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - goquant
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
